create DATABASE INVENTORY;

USE INVENTORY;

----- create SUPPLIER TABLE TO STORE SUPPLIER DETAILS------

CREATE TABLE SUPPLIER
(SID CHAR(5),
SNAME VARCHAR(30) NOT NULL,
SADD VARCHAR(40) NOT NULL,
SCITY VARCHAR(25) DEFAULT 'DELHI',
SPHONE CHAR(15) UNIQUE,
EMAIL VARCHAR(50));

DROP TABLE SUPPLIER;

DELETE FROM SUPPLIER WHERE SID = 'S0002';

---- CREATE MYSEQ SEQUENCE TO GET AUTOMATIC INT FOR IDENTIFIER CREATION-----

CREATE SEQUENCE MYSEQ
AS INT
START WITH 1 
INCREMENT BY 1;

SELECT NEXT VALUE FOR MYSEQ;

----- CREATE STORED PROCEDURE FOR INSERTING SUPPLIERS IN TO SUPPLIER TABLE WITH AUTOMATIC ID------

CREATE PROCEDURE INSUP @N AS VARCHAR(30), @A AS VARCHAR(40), @C AS VARCHAR(25), @P AS CHAR(15), @EM AS VARCHAR(50)
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I < 10
			SET @ID = CONCAT('S000', @I);
		ELSE IF @I < 100
			SET @ID = CONCAT('S00', @I);
		ELSE IF @I < 1000
			SET @ID = CONCAT('S0', @I);
		ELSE IF @I < 10000
			SET @ID = CONCAT('S', @I);
		ELSE 
			SET @ID = 'NA';

		INSERT INTO SUPPLIER VALUES (@ID, @N, @A, @C, @P, @EM);

		SELECT * FROM SUPPLIER;
END; 

insert INTO SUPPLIER (SID, SNAME, SADD, SCITY, SPHONE, EMAIL)
VALUES ('S0001', 'DASMESH SUPPLIERS', '96 NEHRU PLACE', 'DELHI', '7947313052', 'DASMESHT@GMAIL.COM');

INSUP 'IMAGINE APPLE STORE', 'SECTOR 61', 'DELHI', '7947322675', 'IMASTORE1@GMAIL.COM';

insert INTO SUPPLIER (SID, SNAME, SADD, SCITY, SPHONE, EMAIL)
VALUES('S0003', 'AARYA SALES CORP.', '92 NEHRU PLACE', 'DELHI', '7947409568', 'ASALES@YAHOOMAIL.COM');

insert INTO SUPPLIER (SID, SNAME, SADD, SCITY, SPHONE, EMAIL)
VALUES('S0004', 'HINDUSTAN COMP PRODS', 'CONNAUGHT PLACE', 'DELHI', '7947235557', 'HINDCOMP@GMAIL.COM');

insert INTO SUPPLIER (SID, SNAME, SADD, SCITY, SPHONE, EMAIL)
VALUES('S0005', 'R COMP CLINIC', 'BABA GANGANATH MARG', 'DELHI', '7947272789', 'RCOMPCLINIC@YAHOO.COM');
 
-----create SID AS PRIMARY KEY THRU CONSTRAINT----- 
ALTER TABLE SUPPLIER
ALTER COLUMN SID CHAR(5) NOT NULL;

ALTER TABLE SUPPLIER
ADD CONSTRAINT R21 PRIMARY KEY (SID);

SELECT * FROM SUPPLIER;

------ CREATE PRODUCT TABLE CONTAINING PRODUCTS AVAILABLE IN THE BUSINESS-----

CREATE TABLE PRODUCT
(PID CHAR(5),
PDESC VARCHAR(40) NOT NULL,
PRICE INT CHECK (PRICE > 0),
CATEGORY CHAR(5) CHECK (CATEGORY IN ('IT', 'HA', 'HC')),
SID CHAR(5) FOREIGN KEY (SID) REFERENCES SUPPLIER);

ALTER TABLE PRODUCT
DROP FOREIGN KEY (SID) REFERENCES SUPPLIER;

-----ASSIGNMENT 8 -------
 ----ADDPRO–SHOULD ADD THE PRODUCT IN THE PRODUCT TABLE AND DISPLAY THE DETAILS OF THE NEW PRODUCT ADDED----


CREATE PROCEDURE ADDPRO @D AS VARCHAR(40), @P AS INT, @CT AS CHAR(5), @SID AS CHAR(5)  
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I < 10
			SET @ID = CONCAT('P000', @I);
		ELSE IF @I < 100
			SET @ID = CONCAT('P00', @I);
		ELSE IF @I < 1000
			SET @ID = CONCAT('P0', @I);
		ELSE IF @I < 10000
			SET @ID = CONCAT('P', @I);
		ELSE 
			SET @ID = 'NA';

		INSERT INTO PRODUCT VALUES (@ID, @D, @P, @CT, @SID);

		SELECT * FROM PRODUCT;
END; 

DROP PROCEDURE INPRO;

ALTER TABLE PRODUCT
ALTER COLUMN PID CHAR(5) NOT NULL;

ALTER TABLE PRODUCT
ADD CONSTRAINT R22 PRIMARY KEY (PID);

-----------------------------------------------------------------------------------------------------------------
ADDPRO 'P0001', 'HP KEYBOARD', 1200, 'IT', 'S0003';

ADDPRO 'P0002', 'HP KEYBOARD', 1325, 'IT', 'S0005';

ADDPRO 'P0003', 'LENOVO KEYBOARD', 1500, 'HA', 'S0001';

ADDPRO 'P0004', 'LOGISTECH KEYBOARD', 1100, 'HC', 'S0004';

ADDPRO 'P0005', 'ACER KEYBOARD', 1300, 'IT', 'S0002';

ADDPRO 'P0006', 'LOGITECH MOUSE', 600, 'HA', 'S0003';

ADDPRO 'P0007', 'HP MOUSE', 450, 'HA', 'S0005';

ADDPRO 'P0008', 'HP LAPTOP', 35200, 'IT', 'S0004';

ADDPRO 'P0009', 'ACER LAPTOP', 29200, 'IT', 'S0003';

ADDPRO 'P0010', 'DELL LAPTOP', 32400, 'HA', 'S0005';

ADDPRO 'P0011', 'HP HARDDISK', 3900, 'IT', 'S0002';

ADDPRO 'P0012', 'SEAGATE HARDDISK', 4300, 'HA', 'S0001';

ADDPRO 'TRANSCEND HARDDISK', 4500, 'HC', 'S0002';

ADDPRO 'TRANSCEND HARDDISK', 4400, 'HC', 'S0005';

 SELECT * FROM PRODUCT;

 ------ CREATE STOCK TABLE TO SHOW THE STOCK POSITION AT ANY POINT OF TIME-----

 CREATE TABLE STOCK
 (PID CHAR(5) FOREIGN KEY (PID) REFERENCES PRODUCT,
 SQTY INT CHECK (SQTY >= 0),
 ROL INT CHECK (ROL > 0),
 MOQ INT CHECK (MOQ >= 5));

 CREATE PROCEDURE ADDSTK @I AS CHAR(5), @Q AS INT, @R AS INT, @M AS INT
AS
BEGIN
	INSERT INTO STOCK
	VALUES(@I, @Q ,@R, @M);

	SELECT * FROM STOCK;
END;


ADDSTK 'P0001', 12, 5, 10;

ADDSTK 'P0002', 7, 2, 5;

ADDSTK 'P0003', 8, 3, 5;

ADDSTK 'P0004', 10, 5, 8;

ADDSTK 'P0005', 8, 3, 5;

ADDSTK 'P0007', 7, 2, 5;

ADDSTK 'P0008', 7, 2, 5;

ADDSTK 'P0009', 7, 2, 5;

ADDSTK 'P00010', 7, 2, 5;

ADDSTK 'P00011', 7, 2, 5;


 SELECT * FROM STOCK;

 ------ CREATE CUSTOMER TABLE  TO STORE CUSTOMERS DETAILS-----

 CREATE TABLE CUST
 (CID CHAR(5) NOT NULL,
 CNAME VARCHAR (40) NOT NULL,
 ADDRESS VARCHAR (60) NOT NULL,
 CITY VARCHAR (40) NOT NULL,
 PHONE CHAR(15) NOT NULL,
 EMAIL VARCHAR(40) NOT NULL,
 DOB DATE CHECK(DOB < '2000-01-01'));

 ALTER TABLE CUST
 ADD CONSTRAINT R23 PRIMARY KEY (CID);


CREATE PROCEDURE ADDCUST @N AS VARCHAR(30), @A AS VARCHAR(40), @C AS VARCHAR(25), @PH AS CHAR(15), @EM AS VARCHAR(50), @DB AS DATE
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I < 10
			SET @ID = CONCAT('C000', @I);
		ELSE IF @I < 100
			SET @ID = CONCAT('C00', @I);
		ELSE IF @I < 1000
			SET @ID = CONCAT('C0', @I);
		ELSE IF @I < 10000
			SET @ID = CONCAT('C', @I);
		ELSE 
			SET @ID = 'NA';

		INSERT INTO CUST VALUES (@ID, @N, @A, @C, @PH, @EM, @DB);

		SELECT * FROM CUST;
END; 

DROP PROCEDURE INCUST;


ADDCUST 'C0002', 'ABHISHEK KUMAR', 'C2 JANAKPURI', 'DELHI', '9811788899' , 'ABCD@GMAIL.COM', '01-OCT-1993';

ADDCUST 'C0003', 'MOHIT SHARMA', 'B403 RAJOURI GARDEN', 'DELHI','9888989705' , 'MSHARMA@YAHOO.COM', '31-DEC-1995';

ADDCUST 'C0004', 'GAURAV GUTPA', 'DLF PHASE 2', 'GURGAON','9999008765' , 'GG@YAHOO.COM', '09-MAR-1995';

ADDCUST 'C0005', 'RAVINDER RAWAT', 'DLF PHASE 5', 'GURGAON','9999886761' , 'RRAWAT@GMAIL.COM', '09-MAR-1997';

ADDCUST 'C0006', 'AJEET KUMAR', 'ECOVILLAGE 3', 'NOIDA','9811777760' , 'AK05@GMAIL.COM', '01-MAR-1998';

ADDCUST 'C0007', 'HARINDER KUMAR', 'LAXMI NAGAR',  'DELHI','9899033341' , 'HK@GMAIL.COM', '19-SEP-1993';

ADDCUST 'C1001', 'RAMESH GUPTA', 'SECTOR 7', 'DELHI', '9999002727', 'RK@YAHOO.CO.IN', '1990-09-16';

ADDCUST 'C1002', 'SANDEEP SHARMA', 'SECTOR 2', 'GURGAON', '9567890010', 'SAM1@YAHOO.COM','1995-09-15';

ADDCUST 'C1003', 'RAJESH SHARMA', 'SECTOR 11', 'DELHI', '9999000101', 'RSharma56@gmail.com', '1998-03-16';

ADDCUST 'C1004', 'Yogeshwar sharma', 'SECTOR 11', 'DELHI', '8899000101', 'YSharma@gmail.com', '1989-09-25';

ADDCUST 'C1005', 'MANOJ KUMAR', 'B320 JANAKPURI', 'DELHI', '9999012399', 'mKumar@gmail.com', '1985-07-01';

ADDCUST 'C1006', 'ROHIT GUPTA', 'A32/620 MAINROAD', 'GURGAON', '8899001123', 'rgupta@gmail.com', '1992-03-31';

ADDCUST 'C1007', 'KAPIL SHARMA', 'SECTOR 72', 'PUNE', '9999001099', 'kSharma@gmail.com', '1987-09-28';

ADDCUST 'C1008', 'ARCHANA SHARMA', 'NP ROAD', 'PUNE', '9899249700', 'ASharma@gmail.com', '1985-05-10';

ADDCUST 'C1009', 'RANJEETA GOYAL', 'RAJPUR ROAD', 'DEHRADUN', '9999002700', 'rgoyal@gmail.com', '1989-12-31';

ADDCUST 'C1010', 'KOMAL SINGH', 'SECTOR 64', 'GURGAON', '7285912349', 'ksing@gmail.com', '1990-03-31';

ADDCUST  'ASHOK KUMAR', 'SECTOR 51', 'GURGAON', '7285912583', 'akumar@gmail.com', '1992-05-15';


 SELECT * FROM CUST;

 

 ---------------------CREATE TABLE ORDERS TO SAVE THE ORDERS RECEIVED FROM CUSTOMERS-------------------------------

 CREATE TABLE ORDERS
 (OID CHAR(5),
 ODATE DATE,
 PID CHAR(5) FOREIGN KEY (PID) REFERENCES PRODUCT,
 CID CHAR(5) FOREIGN KEY (CID) REFERENCES CUST,
 OQTY INT CHECK (OQTY >= 1));

CREATE PROCEDURE ADDORD  @PI AS CHAR(5), @CI AS CHAR(5), @OQ AS INT
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I < 10
			SET @ID = CONCAT('O000', @I);
		ELSE IF @I < 100
			SET @ID = CONCAT('O00', @I);
		ELSE IF @I < 1000
			SET @ID = CONCAT('O0', @I);
		ELSE IF @I < 10000
			SET @ID = CONCAT('O', @I);
		ELSE 
			SET @ID = 'NA';
	
		INSERT INTO ORDERS
		VALUES(@ID, getdate(),@PI, @CI, @OQ);

		SELECT * FROM ORDERS;
END;


SELECT * FROM ORDERS;

---------CREATE TABLE PURCHASE TO STORE PURCHASE REQUESTS RAISED ON SUPPLIERS---------

CREATE TABLE PURCHASE
(PSID CHAR(5),
PID CHAR(5) FOREIGN KEY(PID) REFERENCES PRODUCT, 
SID CHAR(5) FOREIGN KEY(SID) REFERENCES SUPPLIER, 
PQTY INT, 
DOP DATE);



CREATE PROCEDURE ADDPURCHASE @PI AS CHAR(5), @SI AS CHAR(5), @PQ AS INT, @D AS DATE
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR MYSEQ);

		IF @I < 10
			SET @ID = CONCAT('PS00', @I);
		ELSE IF @I < 100
			SET @ID = CONCAT('PS0', @I);
		ELSE IF @I < 1000
			SET @ID = CONCAT('PS', @I);
		ELSE 
			SET @ID = 'NA';
	
		INSERT INTO PURCHASE
		VALUES (@ID, @PI, @SI, @PQ, @D)

		SELECT * FROM PURCHASE;
END;


DELETE FROM PURCHASE WHERE PID = 'P0001';

ADDPURCHASE 'P0001', 'S0003', 12, '2021-10-15'; 

ADDPURCHASE 'P0002', 'S0005', 6, '2021-10-11'; 

ADDPURCHASE 'P0003', 'S0001', 2, '2021-10-09'; 

ADDPURCHASE 'P0004', 'S0004', 10, '2021-10-15'; 

ADDPURCHASE 'P0005', 'S0002', 8, '2021-09-25'; 

ADDPURCHASE 'P0006', 'S0003', 7, '2021-11-12'; 

ADDPURCHASE 'P0007', 'S0005', 7, '2021-11-15'; 

ADDPURCHASE 'P0008', 'S0004', 7, '2021-11-12'; 

ADDPURCHASE 'P0009', 'S0003', 7, '2021-11-15'; 


------ Adding orders in to order table this should result in to addition to order table and reduction from stock table----

ADDORD O0001, P0001, C0002, 2;

ADDORD  P0003, C0005, 3;

ADDORD  P0002, C0004, 1;

ADDORD P0001, C0005, 5;

ADDORD P0003, C0002, 2;

 



 SELECT * FROM SUPPLIER;
 select * FROM PURCHASE;
 SELECT * FROM CUST;
 SELECT * FROM ORDERS;
 SELECT * FROM STOCK;
 SELECT * FROM PRODUCT;
 


 --------IN THE INVENTORY STRUCTURE GENERATE A VIEW BILL. IT SHOULD DISPLAY OID(O), ODATE(O),CNAME(C),ADDRESS(C),PHONE(C),PDESC(P), PRICE(P), OQTY(O), AMOUNT-----

 CREATE VIEW BILL
 AS
	 select O.OID, O.ODATE, O.OQTY, C.CNAME, C.ADDRESS, C.PHONE, P.PDESC, P.PRICE, P.PRICE * O.OQTY AS 'AMOUNT'
	 FROM ORDERS O
	 INNER JOIN CUST C
	 ON O.CID = C.CID
	 INNER JOIN PRODUCT P
	 ON O.PID = P.PID;

 
 ----- TRIGGERS --------
 ------ create TRIGGER FOR STOCK DEDUCTION FROM STOCKS TABLE FOR EVERY ORDER INSERTED-----
------CREATE TRIGGER FOR INSUFFICIENT QUANTITY IF STOCK IS LESS THAN ORDERED QTY ALSO UPDATE QTY IN STOCK TABLE ACCORDING TO ORDER -------

CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @QR AS INT;
	DECLARE @QS AS INT;

	SET @QR = (SELECT QTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));

	IF @QS >= @QR
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @QR
			WHERE PID = (SELECT PID FROM INSERTED);
			
			COMMIT;
			PRINT('ORDER ACCEPTED');
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('INSUFFICIENT QUANTITY - ORDER REJECTED');
		END;
END;


----- TRIGGER FOR STOCK UPDATE WHEN OLD ORDER IS UPDATED THAN NEW ORDER RAISED-----

CREATE TRIGGER TR_UP_ORD
ON ORDERS
FOR UPDATE
AS
BEGIN
	DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;

	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ = (SELECT OQTY FROM INSERTED);

	UPDATE STOCK SET SQTY = SQTY + @OQ - @NQ
	WHERE PID =  (SELECT PID FROM INSERTED);
END;

------ CREATE TRIGGER FOR PRODUCT DELETED UPDATE IN STOCK TABLE-----

CREATE TRIGGER TR_DEL_PRO
ON PRODUCT
FOR DELETE
AS
BEGIN
	DELETE FROM STOCK 
	WHERE PID = (SELECT PID FROM DELETED);
END;

DROP TRIGGER TR_IN_ORD;


 ----- CREATE TRIGGER FOR STOCK INCREASE IN STOCK TABLE FOR EVERY PURCHASE OF NEW STOCK-----



 

@PI, @SI, @PQ, @D 
 ----- CREATE TRIGGER FOR RAISING PURCHASE REQUEST IF STOCK GOES BELOW ROL--------

CREATE TRIGGER INSERT_OR2
ON ORDERS
FOR INSERT
AS
BEGIN 
	DECLARE @QS AS INT;
	DECLARE @QR AS INT;
	DECLARE @RO AS INT;
	DECLARE @PD AS VARCHAR(6);
	DECLARE @SD AS VARCHAR(6);
	DECLARE @PQ AS INT;
	
	
	SET @QR=(SELECT OQTY FROM INSERTED);
	SET @QS=(SELECT SQTY FROM STOCK WHERE PID IN (SELECT PID FROM INSERTED));
	SET @RO=(SELECT ROL FROM STOCK WHERE PID IN (SELECT PID FROM INSERTED));
	SET @SD = (SELECT SI
	SET @SD=(SELECT SID FROM PRODUCT WHERE PID IN (SELECT PID FROM INSERTED));
	SET @PD = (SELECT PID FROM PRODUCT WHERE PID IN (SELECT PID FROM INSERTED));
	SET @PQ=(SELECT MOQ FROM STOCK WHERE PID IN (SELECT PID FROM INSERTED));
			
	IF @QS>=@QR
			BEGIN 
				UPDATE STOCK SET SQTY=SQTY-(SELECT OQTY FROM INSERTED)
				WHERE PID = (SELECT PID FROM INSERTED);
				
				COMMIT;
			END;
	else
				ROLLBACK;

			
		IF @QR>=@RO
				
				INSERT INTO PURCHASE(PID,SID,PQTY,DOP)
				VALUES(@PD,@SD,@PQ,GETDATE());


END;
 
select top 1 * from purchase;
select top 1 * from product;
select top 1 * from stock;
select top 1 * from orders;
select top 1 * from Supplier;

DROP TRIGGER INSERT_OR2;
		


 ---- ADDITIONAL REPORTS REQUIRED AFTER COMPLETION OF PROJECT---

 ---DAILY TRANSACTION REPORT---PID, OID, SID, 

 --- CUSTOMER LEDGER---- ALL THE TRANSACTION DONE BY CUSTOMERS---

 ---- SUPPLIERS LEDGER -- ALL THE PRODUCTS PURCHASED FROM SUPPLIERS----