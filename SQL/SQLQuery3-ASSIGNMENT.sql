CREATE DATABASE DEMO;

USE DEMO;

SELECT * FROM EMP;

SELECT * FROM EMP_SAL;

DROP TABLE EMP_SAL;

---ASSIGNMENT - 1 ---

--- CREATE DATABASE DEMO AND CREATE TABLE EMP ---

CREATE TABLE EMP
(EID CHAR(5),
 NAME VARCHAR(30),
 ADDR VARCHAR(35),
 CITY VARCHAR(35),
 DOB DATE,
 PHONE CHAR(15),
 EMAIL VARCHAR(50));

 INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1001', 'RAMESH GUPTA', 'SECTOR 7','DELHI', '1990-09-16', '9999002727', 'RK@YAHOO.CO.IN'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1002', 'SANDEEP SHARMA', 'SECTOR 2','GURGAON', '1995-09-15', '9567890010', 'SAM1@YAHOO.COM'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1003', 'RAJESH SHARMA', 'SECTOR 11','DELHI', '2001-03-16', '9999000101', 'RSharma56@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1004', 'Yogeshwar sharma', 'SECTOR 11','DELHI', '1989-09-25', '8899000101', 'YSharma@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1005', 'MANOJ KUMAR', 'B320 JANAKPURI','DELHI', '1985-07-01', '9999012399', 'mKumar@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1006', 'ROHIT GUPTA', 'A32/620 MAINROAD','GURGAON', '1992-03-31', '8899001123', 'rgupta@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1007', 'KAPIL SHARMA', 'SECTOR 72','PUNE', '1987-09-28', '9999001099', 'kSharma@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1008', 'ARCHANA SHARMA', 'NP ROAD','PUNE', '1985-05-10', '9899249700', 'ASharma@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1009', 'RANJEETA GOYAL', 'RAJPUR ROAD','DEHRADUN', '1989-12-31', '9999002700', 'rgoyal@gmail.com'); 

INSERT INTO EMP (EID, NAME, ADDR, CITY, DOB, PHONE, EMAIL)
VALUES ('E1010', 'KOMAL SINGH', 'SECTOR 64','GURGAON', '1990-03-31', '7285912349', 'ksing@gmail.com'); 

---ASSIGNMENT -2---

--CREATE TABLE EMP_SAL

CREATE TABLE EMP_SAL
(EID CHAR(5),
DEPT VARCHAR(15),
DESI VARCHAR(30),
DOJ DATE,
SALARY INT);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1001', 'OPS', 'DIRECTOR', '2012-03-15', 480000);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1002', 'OPS', 'VP', '2012-03-15', 245000);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1003', 'ADMIN', 'SR MANAGER', '2012-04-01', 245673);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1004', 'MIS', 'MANAGER', '2012-05-10', 292129);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1005', 'HR', 'ASSOCIATE', '2012-11-07', 397026);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1006', 'OPS', 'VP', '2012-05-10', 96500);

INSERT INTO EMP_SAL (EID, DEPT, DESI, DOJ, SALARY)
VALUES ('E1007', 'HR', 'MANAGER', '2012-05-10', 157322);

--- SELECT ALL NAMES WITH LAST NAME SHARMA----

SELECT * FROM EMP
WHERE NAME LIKE '%SHARMA';

----INCREASE THE SALARY OF ALL MANAGERS BY 10%---

UPDATE EMP_SAL
SET SALARY = (SALARY +(SALARY * 0.1))
WHERE DESI = 'MANAGER';

SELECT * FROM EMP_SAL;



-----ASSIGNMENT 3 ---- CONSTRAINTS

SELECT * FROM EMP;
SELECT * FROM EMP_SAL;

---- MAKE EID PRIMARY KEY ---

ALTER TABLE EMP
ALTER COLUMN EID CHAR(5) NOT NULL;

ALTER TABLE EMP
ADD CONSTRAINT C1 PRIMARY KEY (EID);

--- DECLARE NAME COLUMN NOT NULL---

ALTER TABLE EMP
ALTER COLUMN NAME VARCHAR(30) NOT NULL;

---- DECLARE CHECK CONSTRAINT ON ADDR COLUMN----

ALTER TABLE EMP
ADD CONSTRAINT C2 CHECK (ADDR  NOT LIKE '%UTTAM NAGAR%');

--- DECLARE CHECK CONSTRAINT ON CITY COLUMN--

ALTER TABLE EMP
ADD CONSTRAINT C3 CHECK (CITY IN ('DELHI', 'GURGAON', 'PUNE', 'DEHRADUN', 'NOIDA'));

--- DECLARE UNIQUE CONSTRAINT ON PHONE COLUMN----

ALTER TABLE EMP
ADD CONSTRAINT C4 UNIQUE (PHONE);

---DECLARE CHECK CONSTRAINT ON EMAIL COLUMN---

ALTER TABLE EMP
ADD CONSTRAINT C5 CHECK (EMAIL LIKE '%GMAIL%' OR EMAIL LIKE '%YAHOO%');

---DECLARE CHECK CONSTRAINT ON DOB COLUMN--- not working

ALTER TABLE EMP
ADD CONSTRAINT R3 CHECK (DOB < '2000-01-01');

UPDATE EMP
SET DOB = '1998-03-12'
WHERE EID = 'E1003';

--- declare FOREIGN KEY CONSTRAINT ON EID---
ALTER TABLE EMP_SAL
ADD CONSTRAINT FKID FOREIGN KEY (EID) REFERENCES EMP (EID);





-----assignment 4 ---- 

------city wise count of employees arranged in descending order

select CITY, count(EID) AS 'NO OF MEMBERS'
FROM EMP
GROUP BY CITY
ORDER BY COUNT(EID) DESC;

SELECT * FROM EMP;

----- DETAILS OF THE EMPLOYEES WHO DOES NOT HAVE AN ACCOUNT ON YAHOO DOMAIN-----

SELECT * FROM EMP
WHERE EMAIL NOT LIKE '%YAHOO%';

------DESIGNATION WISE TOTAL COST AND NUMBER OF MEMBERS ARRANGED IN DESCENDING ORDER OF THE TOTAL COST-----

SELECT DESI, COUNT(EID) AS 'NO OF MEMBERS', SUM(SALARY) AS 'TOTAL COST'
FROM EMP_SAL
GROUP BY DESI
ORDER BY SUM(SALARY) DESC; 

------- ASSIGNMENT 5 ----

-------FROM EMP_SAL TABLE DISPLAY, EID NAME CITY DOJ DEPT DESI SALARY OF THE DELHI EMPLOYEES----

SELECT EMP.EID, EMP.NAME, EMP.CITY, EMP_SAL.DOJ, EMP_SAL.DEPT, EMP_SAL.DESI, EMP_SAL.SALARY
FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE CITY = 'DELHI';

--------DETAILS OF ALL THE EMPLOYEES WHOSE SALARY DETAILS ARE NOT AVAILABLE.------

SELECT EMP.EID, EMP.NAME, EMP.CITY, EMP_SAL.DOJ, EMP_SAL.DEPT, EMP_SAL.DESI, EMP_SAL.SALARY
FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE SALARY = NULL;


-----ASSIGNMENT 6 --------

-----CREATE A VIEW EMP_SAL_DETAILSTO GET EID NAME DOJ DEPT DESI SALARY AS BASIC. ALSO CALCULATE HRA (15% OF BASIC), PF (9% OF BASIC), NET(BASIC+HRA+PF), GROSS(NET-PF).----

CREATE VIEW VEMP_SAL1
AS 
	SELECT EMP.EID, NAME, DOJ, DEPT, DESI, SALARY AS 'BASIC', SALARY * 0.15 AS 'HRA', SALARY * 0.09 AS 'PF', SALARY + (SALARY * 0.15) + (SALARY * 0.09) AS 'NET', SALARY + (SALARY * 0.15) AS 'GROSS'
	FROM EMP
	INNER JOIN EMP_SAL
	ON EMP.EID = EMP_SAL.EID;

SELECT * FROM VEMP_SAL1;

------CREATE A VIEW TO DISPLAY EID,NAME, DOJ, DESI, DEPT OF ALL THE MANAGERS JOINED IN 2012-------

CREATE VIEW VEMP_SAL2
AS
	SELECT EMP.EID, NAME, DOJ, DESI, DEPT
	FROM EMP
	INNER JOIN EMP_SAL
	ON EMP.EID = EMP_SAL.EID
	WHERE DESI LIKE '%MANAGER%' AND DATEPART(YY, DOJ) = 2012;

DROP VIEW VEMP_SAL2;

SELECT * FROM VEMP_SAL2;

-------CREATE A VIEW TO HOW MANY TEAM MEMBERS ARE THERE IN EACH DEPARTMENTS IN EACH CITY, ALONG WITH THERE TOTAL & AVERAGE SALARY-------

CREATE VIEW VEMP_SAL3
AS
	SELECT EMP.EID, CITY, DEPT, COUNT(EID) AS 'NO OF TEAM MEMBERS', SUM(SALARY) AS 'TOTAL SALARY', AVG(SALARY) AS 'AVERAGE SALARY'
	FROM EMP
	INNER JOIN EMP_SAL
	ON EMP.EID = EMP_SAL.EID
	GROUP BY DEPT, CITY;

drop view VEMP_SAL3;

select * from EMP;

CREATE VIEW VEMPS3
AS
	SELECT  E.CITY, Es.DEPT, COUNT(E.EID) AS 'NO OF TEAM MEMBERS', SUM(Es.SALARY) AS 'TOTAL SALARY', AVG(Es.SALARY) AS 'AVERAGE SALARY'
	FROM EMP E
	INNER JOIN EMP_SAL Es
	ON E.EID = Es.EID
	GROUP BY Es.DEPT, E.CITY;

select* FROM VEMPS3;

------ Assignment 7 -------

------DEPARTMENT WISE TEAM SIZE AND AVERAGE SALARY OF ALL EMPLOYEES-------

CREATE VIEW VEMPS10
AS
	select DEPT, COUNT(EID) AS 'TEAM SIZE', AVG(SALARY) AS 'AVERAGE SALARY'
	FROM EMP_SAL
	GROUP BY DEPT;

SELECT * FROM VEMPS10;

-----COUNT OF MANAGERS IN THE COMPANY-----
USE TEST;

SELECT * FROM EMP_SAL;

SELECT COUNT(EID) AS 'COUNT OF MANAGERS'
FROM EMP_SAL
WHERE DESI LIKE '%MANAGER%';

------MAXIMUM & MINIMUM SALARY OF AN ASSOCIATE-----

SELECT MAX(SALARY) AS 'MAXIMUM SALARY', MIN(SALARY) AS 'MINIMUM SALARY'
FROM EMP_SAL
WHERE DESI = 'ASSOCIATE';

-----DEPARTMENT WISE TEAM SIZE AND AVERAGE SALARY OF DELHI EMPLOYEES----

SELECT Es.DEPT, COUNT(E.EID) AS 'TEAM SIZE', AVG(Es.SALARY) AS 'AVERAGE SALARY'
FROM EMP E
INNER JOIN EMP_SAL Es
ON E.EID = Es.EID
WHERE E.CITY = 'DELHI'
GROUP BY Es.DEPT;

----GENERATE OFFICIAL EMAIL OF THE EMPLOYEE TAKING 1STCHARATCET OF FIRST NAME , 1STCHARATCER OF LAST NAME , 
--LAST 3 DIGITS OF EID, FOLLED BY ‘RCG.COM’. EMAIL SHOULD BE IN A UPPER CASE---

SELECT EID, NAME, UPPER(CONCAT(LEFT(NAME, 1), (LEFT(RIGHT(NAME, LEN(NAME)-CHARINDEX(' ',NAME)),1)), RIGHT(EID, 3), '@', 'RCG.COM'))
FROM EMP;

-----NAME,CITY , PHNO & EMAIL OF THE EMPLOYEES WHOSE AGE >=40-----

SELECT NAME, CITY, PHONE, EMAIL
FROM EMP
WHERE DATEPART(YY, DOB)>40;

------EID, NAME DOJ OF EMPLOYEES WHO HAVE COMPLETED 5 YEARS IN THE COMPANY-------

 SELECT EID, NAME, CONVERT(VARCHAR(20), DOJ, 100) AS 'DOJ'
 FROM EMP
 WHERE DATEDIFF(YY, DOJ, GETDATE())>5;

 ----DETAILS OF THE MANAGERS HAVING BIRTHDAY IN THE CURRENT MONTH----

SELECT  E.NAME, Es.DESI, FORMAT(E.DOB,'M') AS 'BIRTHDAY' , MONTH(E.DOB) AS'BIRTH MONTH'
FROM EMP E
INNER JOIN EMP_SAL Es
ON E.EID = Es.EID
WHERE DESI LIKE '%MANAGER%' AND MONTH(DOB) = MONTH(GETDATE());

 SELECT * FROM EMP;
 SELECT * FROM EMP_SAL;

 -------EID, DEPT , DESI , SALARY OF THE EMPLOYEE WHO IS GETTING THE MAXIMUM SALARY------

  SELECT * FROM EMP_SAL
  WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY =  (select MAX(SALARY) FROM EMP_SAL));

  SELECT * FROM EMP_SAL
  WHERE SALARY = 520000;

  ------EID, NAME OF EMPLOYEE WHO HAS LONGEST NAME----- 

  SELECT EID, NAME FROM EMP
  WHERE EID IN (SELECT EID FROM EMP WHERE LEN(NAME) = (SELECT MAX(LEN(NAME)) FROM EMP)); 
  

  ----- ASSIGNMENT 7 ------

  -----CREATE A FUNCTION CALC TO PERFORM THE SPECIFIED OPERATION ON THE GIVEN TWO NUMBERS ---

  CREATE FUNCTION CAL (@A AS INT, @B AS INT, @O AS CHAR(1))
RETURNS INT
AS
BEGIN
		DECLARE @R AS INT;

		IF @O = '+'
				SET @R = @A + @B;
		ELSE IF @O = '-'
				SET @R = @A - @B;
		ELSE IF @O = '*'
				SET @R = @A * @B;
		ELSE IF @O = '/'
				SET @R = @A / @B;
		ELSE IF @O = '%'
				SET @R = @A % @B;
		ELSE 
				SET @R = 0;

		RETURN @R;
END;

SELECT venu1.DBO.CAL(20,15, '*');

------FUNCTION TO GENERATE THE EMAIL ID BY ACCEPTING NAME & EID. EMAIL SHOULD CONTAIN 1STCHARACTER OF 1STNAME , ----
-----1STCHARACTER OF LAST NAME, LAST 3 DIGITS OF EMP ID FOLLOWED BY @RCG.COM-----

CREATE FUNCTION CMAIL (@ID AS CHAR(5), @N AS VARCHAR(30), @D AS VARCHAR(20))
RETURNS VARCHAR(100)
AS
BEGIN
		DECLARE @EM AS VARCHAR(100);
		DECLARE @LN AS VARCHAR(20);
		DECLARE @L AS INT;
		DECLARE @S AS INT;
		
		SET @S =  CHARINDEX(' ',@N);
		SET @L = LEN (@N);
		SET @LN = RIGHT(@N, @L-@S);
		
		SET @EM = UPPER(CONCAT(LEFT(@N,1), LEFT(@LN,1), RIGHT(@ID, 3), '@', @D, '.COM'));
		
		RETURN @EM;
END;  

DROP venu1.DBO.CMAIL;

select venu1.DBO.CMAIL('E0001', 'RAJEEV GARG', 'RCG');

---FUNCTION TO RETURN EID, NAME, DESI, DEPT ,SALARY OF THE EMPLOYEES OF A SPECIFIED DEPARTMENT----

create FUNCTION GETEMP (@DEP VARCHAR(50))
RETURNS TABLE
AS
		RETURN (SELECT * FROM EMP_SAL WHERE DEPT = @DEP);

SELECT * FROM DBO.GETEMP('HR');

---- ASSIGNMENT 8 ----

-----EID, NAME, CITY OF GURGAON EMPLOYEES----

SELECT EID, NAME, CITY FROM EMP
WHERE CITY = 'GURGAON';

-----EID, NAME , DOJ ,DEPT, DESI & SALARY OF ALL MANAGERS------

SELECT EMP.EID, NAME, DOJ, DEPT, DESI, SALARY FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID 
WHERE DESI = 'MANAGER';

-----REDUCE THE SALARY OF ALL DELHI EMPLOYEES BY 10%.----

UPDATE EMP_SAL SET SALARY = SALARY - (SALARY * 0.1)
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'DELHI');

----DISPLAY THE EID, NAME , CITY, DOJ ,DEPT, DESI & SALARY OF THE TEAM MEMBERS OF DAVID & RAMESH GUPTA.-----

SELECT EMP.EID, NAME, CITY, DEPT, DESI, SALARY FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE DEPT IN (SELECT DEPT FROM EMP_SAL WHERE EID IN (SELECT EID FROM EMP WHERE NAME IN ('DAVID', 'RAMESH GUPTA')))

----CREATE A TRAINING TABLE CONTAINING EID, NAME, DEPT. INSERT THE DETAILS OF OPS TEAM MEMBERS IN THE TRAINING TABLE-----

CREATE TABLE TRAINING 
(EID CHAR(5),
NAME VARCHAR(30),
MODULE VARCHAR(20),
DEPT VARCHAR(20));


INSERT INTO TRAINING (EID, NAME, DEPT)
SELECT EMP.EID, NAME, DEPT FROM EMP
INNER JOIN EMP_SAL
ON EMP.EID = EMP_SAL.EID
WHERE DEPT = 'OPS';

SELECT * FROM TRAINING;

-----DETAILS OF DIRECTORS SHOULD BE DELETED FROM THE TRAINING TABLE-----

DELETE FROM TRAINING 
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI = 'DIRECTOR');

-----DISPLAY THE SALARY DETAILS OFF ALL EMPLOYES IF ANY OF THE TEAM MEMBER HAS SALARY MORE THAN 200000-----

SELECT * FROM EMP_SAL
AND EXISTS (SELECT * FROM EMP_SAL WHERE SALARY > 300000);

USE TEST2;

SELECT * FROM EMP;

SELECT * FROM EMP_SAL;